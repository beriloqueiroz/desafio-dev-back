<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a70dfc59-e7df-4d5f-a569-2fd284a0f00e" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache_sync/cache_sync.Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/cache_sync/cache_sync.Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache_sync/internal/infra/implements/cptec_message_gateway.implements.go" beforeDir="false" afterPath="$PROJECT_DIR$/cache_sync/internal/infra/implements/cptec_message_gateway.implements.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cache_sync/internal/usecase/get_msgs.usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/cache_sync/internal/usecase/get_msgs.usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core.Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/core.Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/core/internal/usecase/sync_schedules_notification.usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/core/internal/usecase/sync_schedules_notification.usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web_client_test/web_client_test.Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/web_client_test/web_client_test.Dockerfile" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2iS0Jj2DcS8haqrMJiIh3EYUlXr" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Docker.cache_sync.Dockerfile.executor": "Run",
    "Docker.core/core.Dockerfile.executor": "Run",
    "Docker.docker-compose.yaml.adminer: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.cache_sync: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.core: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.mgmt_db: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.migrate: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.web_client_test: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml.web_worker: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.web_worker.Dockerfile.executor": "Run",
    "Go Build.go build github.com/beriloqueiroz/desafio-dev-back/cmd/web_client_test.executor": "Run",
    "Go Build.go build github.com/beriloqueiroz/desafio-dev-back/cmd/web_worker.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/berilo/dev/desafio-dev-back/core",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "Errors"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/core" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/cache_sync/pkg/entity" />
      <recent name="$PROJECT_DIR$/internal/cache_sync_service/infra/implements" />
      <recent name="$PROJECT_DIR$/cmd/web_worker" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/docs" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yaml: Compose Deployment">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="core.Dockerfile: Compose Deployment" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="core.Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.cache_sync: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="cache_sync" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.core: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="core" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.web_worker: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="web_worker" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.core: Compose Deployment" />
        <item itemvalue="Docker.core.Dockerfile: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.web_worker: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.cache_sync: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18034.61" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18034.61" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>