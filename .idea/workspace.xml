<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a70dfc59-e7df-4d5f-a569-2fd284a0f00e" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/todo" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web_app/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web_app/app/api/route.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web_app/data/notifications.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web_app/helpers/notification-repo.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web_app/helpers/types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/web_app/helpers/util.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web_app" beforeDir="false" afterPath="$PROJECT_DIR$/web_app" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/web_app/app/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/web_app/app/page.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2iS0Jj2DcS8haqrMJiIh3EYUlXr" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Docker.cache_sync.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.core/core.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.adminer: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.cache_sync: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.core: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.kafka: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.mgmt_db: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.migrate: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.web-app: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.web_app: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.web_client_test: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.web_worker: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.web_app/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.web_worker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/beriloqueiroz/desafio-dev-back/cmd/web_client_test.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build github.com/beriloqueiroz/desafio-dev-back/cmd/web_worker.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/berilo/dev/desafio-dev-back/.docker/web_app/data&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.standard&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.standard&quot;: &quot;&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;Errors&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/home/berilo/dev/desafio-dev-back/web_app/node_modules/typescript/lib&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.docker/web_app/data" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/core" />
      <recent name="$PROJECT_DIR$/cache_sync/pkg/entity" />
      <recent name="$PROJECT_DIR$/internal/cache_sync_service/infra/implements" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docs" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yaml.web_app: Compose Deployment">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.web-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="web-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.web_app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="web_app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.web_worker: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="web_worker" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="web_app/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="web_app/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yaml.web_app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.web_worker: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.web-app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.web_app/Dockerfile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18034.61" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18034.61" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>